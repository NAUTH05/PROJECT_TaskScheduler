using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace MyProject
{
    public partial class MainForm : Form
    {
        private string currentUserName = "Mock User";
        private FlowLayoutPanel flowProjectsList;

        public MainForm()
        {
            InitializeComponent();
            InitializeUI();
        }

        public MainForm(string userName) : this()
        {
            currentUserName = userName;
            lblWelcome.Text = $"Chào mừng, {userName}";
            lblUserName.Text = GetInitials(userName);
        }

        private void InitializeUI()
        {
            // Làm tròn góc cho label user avatar
            lblUserName.Paint += (s, e) =>
            {
                e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;
                using (var path = GetRoundedRectPath(lblUserName.ClientRectangle, 25))
                {
                    lblUserName.Region = new Region(path);
                }
            };

            // Làm tròn góc cho các stat panels
            SetRoundedCorners(panelStat1, 10);
            SetRoundedCorners(panelStat2, 10);
            SetRoundedCorners(panelStat3, 10);
            
            // Thêm border màu cho các stat panels
            panelStat1.Paint += (s, e) => DrawLeftBorder(e.Graphics, panelStat1, Color.FromArgb(52, 152, 219), 4);
            panelStat2.Paint += (s, e) => DrawLeftBorder(e.Graphics, panelStat2, Color.FromArgb(241, 196, 15), 4);
            panelStat3.Paint += (s, e) => DrawLeftBorder(e.Graphics, panelStat3, Color.FromArgb(46, 204, 113), 4);

            // Tạo FlowLayoutPanel cho projects
            flowProjectsList = new FlowLayoutPanel
            {
                Dock = DockStyle.Fill,
                FlowDirection = FlowDirection.TopDown,
                WrapContents = false,
                AutoScroll = true,
                Padding = new Padding(10)
            };
            panelProjectsList.Controls.Add(flowProjectsList);

            // Load sample data
            LoadSampleProjects();
        }

        private string GetInitials(string name)
        {
            var parts = name.Split(' ');
            if (parts.Length >= 2)
                return $"{parts[0][0]}{parts[parts.Length - 1][0]}".ToUpper();
            return name.Length >= 2 ? name.Substring(0, 2).ToUpper() : name.ToUpper();
        }

        private void SetRoundedCorners(Panel panel, int radius)
        {
            panel.Paint += (s, e) =>
            {
                e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;
                using (var path = GetRoundedRectPath(panel.ClientRectangle, radius))
                {
                    panel.Region = new Region(path);
                }
            };
        }

        private System.Drawing.Drawing2D.GraphicsPath GetRoundedRectPath(Rectangle rect, int radius)
        {
            var path = new System.Drawing.Drawing2D.GraphicsPath();
            float r = radius;
            path.AddArc(rect.X, rect.Y, r, r, 180, 90);
            path.AddArc(rect.Right - r, rect.Y, r, r, 270, 90);
            path.AddArc(rect.Right - r, rect.Bottom - r, r, r, 0, 90);
            path.AddArc(rect.X, rect.Bottom - r, r, r, 90, 90);
            path.CloseFigure();
            return path;
        }

        private void DrawLeftBorder(Graphics g, Panel panel, Color color, int width)
        {
            using (var pen = new Pen(color, width))
            {
                g.DrawLine(pen, 0, 0, 0, panel.Height);
            }
        }

        private void LoadSampleProjects()
        {
            // Sample project 1
            AddProjectItem("Phát triển TaskScheduler Backend", "30/11/2025", 60, "In Progress", 
                new[] { "ML", "A" });

            // Sample project 2
            AddProjectItem("Thiết kế UI/UX cho ứng dụng", "15/10/2025", 100, "Completed", 
                new[] { "ML", "B" });

            // Sample project 3
            AddProjectItem("Marketing và giới thiệu sản phẩm", "31/01/2026", 10, "To Do", 
                new[] { "A", "B" });
        }

        private void AddProjectItem(string title, string deadline, int progress, string status, string[] members)
        {
            var projectPanel = new Panel
            {
                Width = flowProjectsList.Width - 40,
                Height = 80,
                BackColor = Color.White,
                Margin = new Padding(5, 5, 5, 10),
                Padding = new Padding(15, 10, 15, 10)
            };

            // Title
            var lblTitle = new Label
            {
                Text = title,
                Font = new Font("Segoe UI", 11F, FontStyle.Bold),
                ForeColor = Color.FromArgb(88, 86, 214),
                AutoSize = true,
                Location = new Point(15, 10),
                Cursor = Cursors.Hand
            };
            lblTitle.Click += (s, e) => MessageBox.Show($"Clicked on: {title}");

            // Deadline
            var lblDeadline = new Label
            {
                Text = $"Kết thúc: {deadline}",
                Font = new Font("Segoe UI", 9F),
                ForeColor = Color.Gray,
                AutoSize = true,
                Location = new Point(15, 40)
            };

            // Progress bar
            var progressBar = new ProgressBar
            {
                Location = new Point(450, 25),
                Size = new Size(200, 20),
                Value = progress,
                Style = ProgressBarStyle.Continuous
            };

            // Progress label
            var lblProgress = new Label
            {
                Text = $"{progress}%",
                Font = new Font("Segoe UI", 9F, FontStyle.Bold),
                AutoSize = true,
                Location = new Point(660, 25)
            };

            // Member avatars
            int xPos = 750;
            foreach (var member in members)
            {
                var lblMember = new Label
                {
                    Text = member,
                    Font = new Font("Segoe UI", 9F, FontStyle.Bold),
                    Size = new Size(35, 35),
                    Location = new Point(xPos, 20),
                    BackColor = Color.FromArgb(88, 86, 214),
                    ForeColor = Color.White,
                    TextAlign = ContentAlignment.MiddleCenter
                };
                
                lblMember.Paint += (s, e) =>
                {
                    e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;
                    using (var path = GetRoundedRectPath(lblMember.ClientRectangle, 17))
                    {
                        lblMember.Region = new Region(path);
                    }
                };

                projectPanel.Controls.Add(lblMember);
                xPos += 40;
            }

            // Status label
            var lblStatus = new Label
            {
                Text = status,
                Font = new Font("Segoe UI", 9F, FontStyle.Bold),
                AutoSize = true,
                Location = new Point(projectPanel.Width - 120, 25),
                Padding = new Padding(10, 5, 10, 5),
                BackColor = GetStatusColor(status),
                ForeColor = Color.White
            };

            // Làm tròn góc cho status label
            lblStatus.Paint += (s, e) =>
            {
                e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;
                using (var path = GetRoundedRectPath(lblStatus.ClientRectangle, 5))
                {
                    lblStatus.Region = new Region(path);
                }
            };

            projectPanel.Controls.AddRange(new Control[] { lblTitle, lblDeadline, progressBar, lblProgress, lblStatus });
            
            // Làm tròn góc cho project panel
            projectPanel.Paint += (s, e) =>
            {
                e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;
                using (var path = GetRoundedRectPath(projectPanel.ClientRectangle, 8))
                {
                    projectPanel.Region = new Region(path);
                }
            };

            flowProjectsList.Controls.Add(projectPanel);
        }

        private Color GetStatusColor(string status)
        {
            return status switch
            {
                "To Do" => Color.FromArgb(231, 76, 60),
                "In Progress" => Color.FromArgb(241, 196, 15),
                "Completed" => Color.FromArgb(46, 204, 113),
                _ => Color.Gray
            };
        }
    }
}
